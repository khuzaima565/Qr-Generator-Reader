{"version":3,"sources":["script.js"],"names":["document","addEventListener","qrInput","getElementById","generateBtn","qrCode","startBtn","video","output","tick","readyState","HAVE_ENOUGH_DATA","stream","canvas","createElement","srcObject","setAttribute","videoHeight","play","getContext","requestAnimationFrame","width","height","imageData","context","getImageData","code","jsQR","data","textContent","concat","style","display","getTracks","downloadBtn","value","qrValue","innerHTML","qr","QRCode","colorDark","colorLight","_el","firstChild","toDataURL","constraints","regeneratorRuntime","async","_context","prev","next","facingMode","awrap","navigator","mediaDevices","getUserMedia","sent","t0","console","error","stop","fileInput","event","drawImage","files","FileReader","reader","onload","e","img","Image","stopVideoStream","forEach","src","target","result","readAsDataURL","file"],"mappings":"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","file":"script.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const qrInput = document.getElementById('qr-input');\r\n    const generateBtn = document.getElementById('generate-btn');\r\n    const qrCode = document.getElementById('qr-code');\r\n    const startBtn = document.getElementById('start-btn');\r\n    const video = document.getElementById('video');\r\n    const output = document.getElementById('output');\r\n    const fileInput = document.getElementById('file-input');\r\n    const downloadBtn = document.getElementById('download-btn');\r\n\r\n    generateBtn.addEventListener('click', () => {\r\n        const qrValue = qrInput.value;\r\n        if (qrValue) {\r\n            qrCode.innerHTML = '';\r\n            const qr = new QRCode(qrCode, {\r\n                text: qrValue,\r\n                width: 256,\r\n                height: 256,\r\n                colorDark: \"#ffffff\",\r\n                colorLight: \"#00216e\",\r\n            });\r\n            downloadBtn.setAttribute('href', qr._el.firstChild.toDataURL(\"image/png\"));\r\n            downloadBtn.setAttribute('download', 'qr-code.png');\r\n        } else {\r\n            alert('Please enter a valid text or URL');\r\n        }\r\n    });\r\n\r\n    startBtn.addEventListener('click', () => {\r\n        video.style.display = 'block';\r\n        startQRCodeScanning();\r\n    });\r\n\r\n    async function startQRCodeScanning() {\r\n        try {\r\n            const constraints = {\r\n                video: { facingMode: 'environment' }\r\n            };\r\n            const stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n            video.srcObject = stream;\r\n            video.setAttribute('playsinline', true);\r\n            video.play();\r\n            requestAnimationFrame(tick);\r\n        } catch (error) {\r\n            console.error('Error accessing the camera: ', error);\r\n        }\r\n    }\r\n\r\n    function tick() {\r\n        if (video.readyState === video.HAVE_ENOUGH_DATA) {\r\n            const canvas = document.createElement('canvas');\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            const context = canvas.getContext('2d');\r\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n            const code = jsQR(imageData.data, canvas.width, canvas.height);\r\n            if (code) {\r\n                output.textContent = `QR Code Data: ${code.data}`;\r\n                video.style.display = 'none';\r\n                stopVideoStream();\r\n            } else {\r\n                requestAnimationFrame(tick);\r\n            }\r\n        } else {\r\n            requestAnimationFrame(tick);\r\n        }\r\n    }\r\n\r\n    function stopVideoStream() {\r\n        const stream = video.srcObject;\r\n        const tracks = stream.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n        video.srcObject = null;\r\n    }\r\n\r\n    fileInput.addEventListener('change', (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onload = function(e) {\r\n                const img = new Image();\r\n                img.onload = function() {\r\n                    const canvas = document.createElement('canvas');\r\n                    canvas.width = img.width;\r\n                    canvas.height = img.height;\r\n                    const context = canvas.getContext('2d');\r\n                    context.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n                    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n                    const code = jsQR(imageData.data, canvas.width, canvas.height);\r\n                    if (code) {\r\n                        output.textContent = `QR Code Data: ${code.data}`;\r\n                    } else {\r\n                        output.textContent = 'No QR code found.';\r\n                    }\r\n                };\r\n                img.src = e.target.result;\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    });\r\n});\r\n"]}